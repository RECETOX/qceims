#!/bin/bash

set -- $(getopt fm: "$@")

force=
while [ $1 != -- ]; do case $1 in
	-m) MEMGB=$2; shift;;
	-f) force=yes ;; 
	esac
	shift
done

#echo QCEIMS=${QCEIMS:=/storage/brno3-cerit/home/ljocha/work/QCEIMS_v.4.2}
echo QCEIMS=${QCEIMS:=/storage/brno3-cerit/home/ljocha/work/QCxMS-5.1.3}
echo HOURS=${HOURS:=24}
echo MEMGB=${MEMGB:=12}
echo SCRATCH_SIZE=${SCRATCH_SIZE:=20gb}

echo ORCA=${ORCA:=orca/orca-5.0.2-intel-19.0.4-byylubw}
ORCA_WRAPPER=https://raw.githubusercontent.com/RECETOX/qceims/main/orca_wrapper

MEMMB=$(($MEMGB * 1024))


d=$(pwd)
bname=`basename $d`

DIR=$d/TMPQCXMS
echo $DIR
if [ ! -d "$DIR" ]; then 
    echo "run mpspred first!"
    exit 
fi

#########################################
echo 'starting parallel qcxms run on'

cd $DIR        
DIR=$PWD

#########################################
# outer loop (runs until all is done)
#########################################

for vz in TMP.*
 do
   cd $DIR/$vz || { echo cd $DIR/$vz: $! >&2; continue; }
   VZ_NUM=`echo $vz | awk -F . '{print $2}'`
   VZ_DIR=`pwd`

   [ -n "$force" ] && rm -f ready jobid

   if [ -f jobid ]; then
     jobid=$(cat jobid)
     if qout="$(qstat -H $jobid)"; then
        stat=$(tail -1 <<<"$qout")
        set -- $stat
        if [ "${10}" = R -o "${10}" = Q ]; then
           echo $vz: $jobid still there \(${10}\), skipped >&2
           continue
        fi
     fi
   fi
   cat > ${bname}_${VZ_NUM} <<EOF
#!/bin/bash

set -x
echo hostname: \`hostname\`
export OMP_NUM_THREADS=1

# module add $ORCA

# Label for the run
#PBS -N qcxms_${bname}_$VZ_NUM
#PBS -j oe

cd $VZ_DIR || { echo $VZ_DIR: \$!; exit 1 ; }
tdir=\$SCRATCHDIR
cp $VZ_DIR/* \$tdir
cd \$tdir

if [ ! -d "~/.XTBPARAM" ]; then
  cp -r $QCEIMS/.XTBPARAM ~
fi

curl -X GET $ORCA_WRAPPER | sed "s/%MEMMB%/$MEMMB/;s?%ORCA%?$ORCA?" >orca
chmod +x orca

PATH=.:\$PATH
$QCEIMS/qcxms -prod > qcxms.out 2>&1 
echo \$? >ready.tmp

cp * $VZ_DIR
cd $VZ_DIR
rm -rf \$tdir/*

mv ready.tmp ready
EOF
#  this is the job (qcxms calls dscf/grad, mopac or dftb+)
# VERY VERY IMPORTANT: termination of this job should produce
# a file <ready> in the subdir (e.g. by 'touch ready')
       # qsub -l select=1:ncpus=1:mem=4gb:scratch_local=8gb -q default@meta-pbs.metacentrum.cz ${bname}_${VZ_NUM}
        qsub -l walltime=$HOURS:0:0 -l select=1:ncpus=1:mem=${MEMGB}gb:scratch_local=$SCRATCH_SIZE ./${bname}_${VZ_NUM} >$VZ_DIR/jobid
        echo qsub -l walltime=$HOURS:0:0 -l select=1:ncpus=1:mem=${MEMGB}gb:scratch_local=$SCRATCH_SIZE ./${bname}_${VZ_NUM} \>$VZ_DIR/jobid
#
#        echo "JOB  "${bname}_${VZ_NUM}"  STARTED"
 done
exit
